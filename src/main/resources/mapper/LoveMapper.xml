<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.LoveMapper">

    <resultMap id="BaseResultMap" type="com.example.demo.entity.Love" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="status_id" property="statusId" jdbcType="INTEGER" />
        <result column="like_user" property="likeUser" jdbcType="VARCHAR" />
        <result column="version" property="version" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, status_id, like_user,version
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from love
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from love
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.example.demo.entity.Love" >
        insert into love (id, status_id, like_user)
        values (#{id,jdbcType=INTEGER}, #{statusId,jdbcType=VARCHAR}, #{likeUser,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.example.demo.entity.Love" >
        insert into love
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="statusId != null" >
                status_id,
            </if>
            <if test="likeUser != null" >
                like_user,
            </if>
            <if test="version != null" >
                version,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="statusId != null" >
                #{statusId,jdbcType=VARCHAR},
            </if>
            <if test="likeUser != null" >
                #{likeUser,jdbcType=VARCHAR},
            </if>
            <if test="version != null" >
                #{version,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Love" >
        update like
        <set >
            <if test="statusId != null" >
                status_id = #{statusId,jdbcType=VARCHAR},
            </if>
            <if test="likeUser != null" >
                likeUser = #{likeUser,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Love" >
        update love
        set status_id = #{statusId,jdbcType=VARCHAR},
        like_user = #{likeUser,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

   <!--根据微博id查询-->
    <select id="selectByStatusId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from love
        where status_id = #{statusId,jdbcType=INTEGER}
    </select>

    <update id="updateByVersion" parameterType="com.example.demo.entity.Love" >
        update love
        set  like_user = #{likeUser,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
        and version = #{version,jdbcType=INTEGER}
    </update>
</mapper>
